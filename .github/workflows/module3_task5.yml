---
name: module3_task5
"on":
  push:
    branches:
      - main
    tags:
      - "1.0.1"
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  builds:
    permissions: write-all
    name: up-to-date installation system
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set execute permissions
        run: |
          cd module3_task1
          chmod +x setup.sh
      - name: Run setup.sh
        run: |
          cd module3_task1
          sudo ./setup.sh
      - name: Validate Makefile execution make build command
        run: |
          make help
          make build
          make lint
          make run
          make stop
          make clean
        working-directory: module3_task5
      - name: packaging
        run: cd module3_task5 && make package
      - name: tests
        run: |
          cd module3_task5/ && make test
      - name: archieve ZIP file artifact only if all tests sucess
        if: ${{github.ref=='refs/heads/main'}}
        uses: actions/upload-artifact@v3
        with:
          name: Saving the zip file
          path: |
            module3_task5/awesome-website.zip
      - name: construct Release.txt
        run: cat ./module3_task5/DEPLOY.md >> Release.txt

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/1.0.1')
        with:

          files: |
            awesome-website.zip
            DEPLOY.md
          body: |
            ## body
      - run: gh release create v1.0.1 --title "v1.0.1"
            --notes DEPLOY.md 2>/dev/null || echo "OK"
      - name: Deploy in Netlify
        if: |
          github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: 'module3_task5/dist'
          production-branch: main
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          deploy-message: 'Deployed'
          github-token: ${{ secrets.GITHUB_TOKEN }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
